<?php

/* Copyright (c) 1998-2009 ILIAS open source, Extended GPL, see https://github.com/ILIAS-eLearning/ILIAS/tree/trunk/docs/LICENSE */

require_once __DIR__ . "/../vendor/autoload.php";

use feldbusl\Plugins\CompetenceRecommender\Utils\CompetenceRecommenderTrait;
use srag\DIC\CompetenceRecommender\DICTrait;

/**
 * Class ilCompetenceRecommenderUIHookGUI
 *
 * Generated by srag\PluginGenerator v0.9.7
 *
 * @author Leonie Feldbusch <feldbusl@informatik.uni-freiburg.de>
 */
class ilCompetenceRecommenderUIHookGUI extends ilUIHookPluginGUI {

	use DICTrait;
	use CompetenceRecommenderTrait;
	const PLUGIN_CLASS_NAME = ilCompetenceRecommenderPlugin::class;

	/**
	 * @var ilCtrl
	 */
	protected $ctrl;

	/**
	 * @var ilLanguage
	 */
	protected $lng;

	/**
	 * @var ilTabsGUI
	 */
	protected $tabs;

	/**
	 * @var ilTemplate
	 */
	protected $tpl;

	/**
	 * @var ilHelpGUI
	 */
	protected $help;

	/**
	 * @var ilToolbarGUI
	 */
	protected $toolbar;

	/**
	 * @var ilAccessHandler
	 */
	var $access;

	/**
	 * @var ilUIFramework
	 */
	var $ui;

	/**
	 * @var ilDB
	 */
	var $db;


	/**
	 * ilCompetenceRecommenderUIHookGUI constructor
	 */
	public function __construct() {
		global $DIC;

		$this->ctrl = $DIC->ctrl();
		$this->lng = $DIC->language();
		$this->access = $DIC->access();
		$this->ui = $DIC->ui();
		$this->db = $DIC->database();
		$this->pl = ilCompetenceRecommenderPlugin::getInstance();
	}


	/**
	 * @param string $a_comp
	 * @param string $a_part
	 * @param array  $a_par
	 *
	 * @return array
	 */
	public function getHTML(/*string*/
		$a_comp, /*string*/
		$a_part, /*array*/
		$a_par = []): array 
	{
		if ($a_comp == "Services/PersonalDesktop" && $a_part == "center_column") {
			return ["mode" => ilUIHookPluginGUI::PREPEND, "html" => $this->pdRecommendation()];
		}
		return [ "mode" => ilUIHookPluginGUI::KEEP, "html" => "" ];
	}

	function modifyGUI($a_comp, $a_part, $a_par = array())
	{
		/*if ($a_part == "tabs" && $this->ctrl->getCmdClass() == "ilpersonalskillsgui")
		{
			// addTab(id, text, link, frame)
			$a_par["tabs"]->addTab("comprec_tab", "Lernempfehlungen", 
					$this->ctrl->getLinkTargetByClass(
					[ilUIPluginRouterGUI::class,
					CompetenceRecommenderGUI::class], 						'compRecSettings'));
		}
		if ($a_part == "tabs" && $_GET['baseClass'] == "ilRepositoryGUI")
		{
			$ref_id = $_GET['ref_id'];
			$result = $this->db->query("SELECT * FROM object_data JOIN object_reference WHERE object_data.obj_id = object_reference.obj_id AND object_reference.ref_id = " .$ref_id);
			if ($this->db->fetchAssoc($result)["type"] == "crs") {
				$this->ctrl->setParameterByClass("CompetenceRecommenderGUI", "obj_ref_id", $ref_id);
				// addTab(id, text, link, frame)
				$a_par["tabs"]->addTab("comprec_tab", "Lernempfehlungen", 
					$this->ctrl->getLinkTargetByClass(
					[ilUIPluginRouterGUI::class,
					CompetenceRecommenderGUI::class], 'compRecOverview'));
			}
		}*/
	}

	/**
	* write on personal desktop
	*
	* @return string HTML of div
	*/
	function pdRecommendation()
	{
		$renderer = $this->ui->renderer();
		$factory = $this->ui->factory();

		// if the user has a profile, show recommendations
		$pl = $this->getPluginObject();
		$btpl = $pl->getTemplate("tpl.comprecDesktop.html");
		$btpl->setVariable("TITLE", "Meine Lernempfehlungen");
		$compRecRow = "";

		$items = $renderer->render($factory->image()->standard("Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/CompetenceRecommender/templates/BildKlein.png", "Platzhalter Item"));
		$items = $items ."<br/>". $renderer->render($factory->image()->standard("Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/CompetenceRecommender/templates/BildKlein.png", "Platzhalter Item"));
		$items = $items ."<br/>". $renderer->render($factory->image()->standard("Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/CompetenceRecommender/templates/BildKlein.png", "Platzhalter Item"));
		// render button for course overview
		$button = $renderer->render(
				$factory->button()
				->standard("mehr Details",
				$this->ctrl->getLinkTargetByClass(
				[ilUIPluginRouterGUI::class,
				CompetenceRecommenderGUI::class], 'compRecOverview')));
		// append html with a new line
		$compRecRow = $compRecRow . "<div class=\"ilObjRow\">" . $items . "<div class=\"ilFloatRight\">" .$button . "</div> <hr /> </div>";
		$btpl->setVariable("COMPRECROW", $compRecRow);
		return $btpl->get();
	}
}
