<?php

/* Copyright (c) 1998-2009 ILIAS open source, Extended GPL, see https://github.com/ILIAS-eLearning/ILIAS/tree/trunk/docs/LICENSE */

require_once __DIR__ . "/../vendor/autoload.php";

use feldbusl\Plugins\CompetenceRecommender\Utils\CompetenceRecommenderTrait;
use srag\DIC\CompetenceRecommender\DICTrait;

/**
 * Class ilCompetenceRecommenderUIHookGUI
 *
 * Generated by srag\PluginGenerator v0.9.7
 *
 * @author Leonie Feldbusch <feldbusl@informatik.uni-freiburg.de>
 */
class ilCompetenceRecommenderUIHookGUI extends ilUIHookPluginGUI {

	use DICTrait;
	use CompetenceRecommenderTrait;
	const PLUGIN_CLASS_NAME = ilCompetenceRecommenderPlugin::class;

	/**
	 * @var ilCtrl
	 */
	protected $ctrl;

	/**
	 * @var ilLanguage
	 */
	protected $lng;

	/**
	 * @var ilTabsGUI
	 */
	protected $tabs;

	/**
	 * @var ilTemplate
	 */
	protected $tpl;

	/**
	 * @var ilHelpGUI
	 */
	protected $help;

	/**
	 * @var ilToolbarGUI
	 */
	protected $toolbar;

	/**
	 * @var ilAccessHandler
	 */
	var $access;


	/**
	 * ilCompetenceRecommenderUIHookGUI constructor
	 */
	public function __construct() {
		global $DIC;

		$this->ctrl = $DIC->ctrl();
		$this->lng = $DIC->language();
		$this->access = $DIC->access();
		$this->pl = ilCompetenceRecommenderPlugin::getInstance();
	}


	/**
	 * @param string $a_comp
	 * @param string $a_part
	 * @param array  $a_par
	 *
	 * @return array
	 */
	public function getHTML(/*string*/
		$a_comp, /*string*/
		$a_part, /*array*/
		$a_par = []): array 
	{
		global $DIC;
		
		if ($a_comp == "Services/PersonalDesktop" && $a_part == "center_column") {
			return [ "mode" => ilUIHookPluginGUI::PREPEND, "html" => $this->pdRecommendation() ];
		}
		if ($this->ctrl->getCmdClass() == "ilobjcoursegui" && $a_comp == "Services/Container" && $a_part == "right_column") {
			return [ "mode" => ilUIHookPluginGUI::APPEND, "html" => $this->crsRecommendation() ];
		}
		return [ "mode" => ilUIHookPluginGUI::KEEP, "html" => "" ];
	}

	function modifyGUI($a_comp, $a_part, $a_par = array())
	{
		if ($a_part == "tabs" && $this->ctrl->getCmdClass() == "ilpersonalskillsgui")
		{
			// addTab(id, text, link, frame)
			$a_par["tabs"]->addTab("comprec_tab", "Lernempfehlungen", 
					$this->ctrl->getLinkTargetByClass(
					[ilUIPluginRouterGUI::class,
					CompetenceRecommenderGUI::class], 						'compRecSettings'));
		}
		if ($a_part == "tabs" && $_GET['baseClass'] == "ilRepositoryGUI")
		{
			$this->ctrl->setParameterByClass("CompetenceRecommenderGUI", "obj_ref_id", $_GET['ref_id']);
			// addTab(id, text, link, frame)
			$a_par["tabs"]->addTab("comprec_tab", "Lernempfehlungen", 
					$this->ctrl->getLinkTargetByClass(
					[ilUIPluginRouterGUI::class,
					CompetenceRecommenderGUI::class], 						'compRecOverview'));
		}
	}

	/**
	* write on course container
	*
	* @return string HTML of div
	*/
	function crsRecommendation()
	{
		global $DIC, $ilUser;

		$user_id = $ilUser->getId();
		$renderer = $DIC->ui()->renderer();
		$factory = $DIC->ui()->factory();

		$this->ctrl->setParameterByClass("CompetenceRecommenderGUI", "obj_ref_id", $_GET['ref_id']);
		// render button for course overview
		$button = $renderer->render(
				$factory->button()
				->standard("Lernempfehlungen anzeigen",
				$this->ctrl->getLinkTargetByClass(
				[ilUIPluginRouterGUI::class,
				CompetenceRecommenderGUI::class], 					'compRecOverview')));
		$items = $renderer->render($factory->image()->standard("Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/CompetenceRecommender/templates/BildKlein.png", "Platzhalter Item"));
		$items = $items ."<br/>". $renderer->render($factory->image()->standard("Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/CompetenceRecommender/templates/BildKlein.png", "Platzhalter Item"));
		$items = $items ."<br/>". $renderer->render($factory->image()->standard("Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/CompetenceRecommender/templates/BildKlein.png", "Platzhalter Item"));
		return $button."<br/>" . $items;
	}

	/**
	* write on personal desktop
	*
	* @return string HTML of div
	*/
	function pdRecommendation()
	{
		global $DIC, $ilUser, $ilUtil;

		$user_id = $ilUser->getId();
		$renderer = $DIC->ui()->renderer();
		$factory = $DIC->ui()->factory();

		// find the courses the user is in
		$result = $DIC->database()->query("SELECT * FROM object_reference 
				    JOIN obj_members WHERE 
				    object_reference.obj_id = obj_members.obj_id 
				    AND obj_members.usr_id = " .$user_id);
		$courses = array(); $i=0;
		while ($record = $DIC->database()->fetchAssoc($result)) {
			$courses[$i] = $record["ref_id"];
			$i++;
		}
		
		// if the user is not in a course, do not show recommendations
		if ($i==0) {return "";}

		// if the user is in courses, show recommendations
		$pl = $this->getPluginObject();	
		$btpl = $pl->getTemplate("tpl.comprecDesktop.html");	
		$btpl->setVariable("TITLE", "Meine Lernempfehlungen");
		$compRecRow = "";

		for ($course=0; $course<$i; $course++) {
			// set items of the course
			$items = $renderer->render($factory->image()->standard("Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/CompetenceRecommender/templates/BildKlein.png", "Platzhalter Item"));
			$items = $items ."<br/>". $renderer->render($factory->image()->standard("Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/CompetenceRecommender/templates/BildKlein.png", "Platzhalter Item"));
			$items = $items ."<br/>". $renderer->render($factory->image()->standard("Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/CompetenceRecommender/templates/BildKlein.png", "Platzhalter Item"));
			// set course reference id
			$this->ctrl->setParameterByClass("CompetenceRecommenderGUI", "obj_ref_id", $courses[$course]);
			// render button for course overview
			$button = $renderer->render(
					$factory->button()
					->standard("mehr Details",
					$this->ctrl->getLinkTargetByClass(
					[ilUIPluginRouterGUI::class,
					CompetenceRecommenderGUI::class], 						'compRecOverview')));
			// append html with a new line
			$compRecRow = $compRecRow . "<div class=\"ilObjRow\">" . $items . "<div class=\"ilFloatRight\">" .$button . "</div> <hr /> </div>";
		}
		$btpl->setVariable("COMPRECROW", $compRecRow);
		return $btpl->get();
	}
}
